{
  "_from": "@keydonix/uniswap-oracle-sdk",
  "_id": "@keydonix/uniswap-oracle-sdk@1.0.6",
  "_inBundle": false,
  "_integrity": "sha512-2kyUCQUWbebjTi4cTo/vobk7U2uqb5Mc7cgqgAfxHZO7+tp/He7gBgBaywpKbCfVTxFqj2/vF77I54ZiLBfetQ==",
  "_location": "/@keydonix/uniswap-oracle-sdk",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "@keydonix/uniswap-oracle-sdk",
    "name": "@keydonix/uniswap-oracle-sdk",
    "escapedName": "@keydonix%2funiswap-oracle-sdk",
    "scope": "@keydonix",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@keydonix/uniswap-oracle-sdk/-/uniswap-oracle-sdk-1.0.6.tgz",
  "_shasum": "d0f8ff9159e1b225a33080647614ee940ef98956",
  "_spec": "@keydonix/uniswap-oracle-sdk",
  "_where": "/Users/liubowen/sutd/incentive_oracle/code/code/oracles/uniswap/uniswap-oracle",
  "bugs": {
    "url": "https://github.com/Keydonix/uniswap-oracle/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "TypeScript/JavaScript SDK for a Uniswap price oracle that uses merkle proofs for calculating volume weight moving average price.",
  "devDependencies": {
    "@zoltu/typescript-transformer-append-js-extension": "1.0.1",
    "ts-node": "8.10.1",
    "ttypescript": "1.5.10",
    "typescript": "3.9.3"
  },
  "exports": {
    "import": "./output-esm/index.js",
    "require": "./output-cjs/index.js"
  },
  "files": [
    "source",
    "output-esm",
    "output-cjs"
  ],
  "homepage": "https://github.com/Keydonix/uniswap-oracle#readme",
  "license": "Unlicense",
  "main": "./output-cjs/index.js",
  "name": "@keydonix/uniswap-oracle-sdk",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Keydonix/uniswap-oracle.git"
  },
  "scripts": {
    "build": "npx ttsc --project ./tsconfig-esm.json && npx ttsc --project ./tsconfig-cjs.json",
    "postpublish": "node --eval \"require('fs').unlink('README.md', error => {if(error) throw error})\"",
    "prepublishOnly": "npm run build && cd ../demo && npm run build && npm run test && cd ../sdk && node --eval \"require('fs').copyFile('../README.md', 'README.md', error => {if(error) throw error})\"",
    "watch-cjs": "npx ttsc --project ./tsconfig-cjs.json --watch",
    "watch-esm": "npx ttsc --project ./tsconfig-esm.json --watch"
  },
  "version": "1.0.6"
}
