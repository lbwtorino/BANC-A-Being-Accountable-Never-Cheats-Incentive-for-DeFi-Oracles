{
  "_args": [
    [
      "@zoltu/ethereum-abi-encoder@5.0.1",
      "/Users/liubowen/sutd/incentive_oracle/code/code/oracles/uniswap/uniswap-oracle/demo"
    ]
  ],
  "_from": "@zoltu/ethereum-abi-encoder@5.0.1",
  "_id": "@zoltu/ethereum-abi-encoder@5.0.1",
  "_inBundle": false,
  "_integrity": "sha512-vrlai0bww2GvlLXe2yL6uN9LjoYmUDFjhyjuNRLA/XxbBW+dHky3FXZ5kHD8FU7IMY6utIT4QwswiL1Mgieldg==",
  "_location": "/@zoltu/ethereum-abi-encoder",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@zoltu/ethereum-abi-encoder@5.0.1",
    "name": "@zoltu/ethereum-abi-encoder",
    "escapedName": "@zoltu%2fethereum-abi-encoder",
    "scope": "@zoltu",
    "rawSpec": "5.0.1",
    "saveSpec": null,
    "fetchSpec": "5.0.1"
  },
  "_requiredBy": [
    "/@zoltu/solidity-typescript-generator",
    "/@zoltu/solidity-typescript-generator-fetch-dependencies"
  ],
  "_resolved": "https://registry.npmjs.org/@zoltu/ethereum-abi-encoder/-/ethereum-abi-encoder-5.0.1.tgz",
  "_spec": "5.0.1",
  "_where": "/Users/liubowen/sutd/incentive_oracle/code/code/oracles/uniswap/uniswap-oracle/demo",
  "bugs": {
    "url": "https://github.com/Zoltu/ethereum-abi-encoder/issues"
  },
  "dependencies": {},
  "description": "A single dependency Ethereum ABI encoder/decoder.  Also handles signature parsing and generation!",
  "devDependencies": {
    "@zoltu/typescript-transformer-append-js-extension": "1.0.1",
    "ts-node": "8.3.0",
    "ttypescript": "1.5.7",
    "typescript": "3.6.3"
  },
  "files": [
    "source/",
    "output-es/",
    "output-node/"
  ],
  "homepage": "https://github.com/Zoltu/ethereum-abi-encoder#readme",
  "license": "Unlicense",
  "main": "output-node/index.js",
  "module": "output-es/index.js",
  "name": "@zoltu/ethereum-abi-encoder",
  "repository": {
    "url": "git+https://github.com/Zoltu/ethereum-abi-encoder.git"
  },
  "scripts": {
    "build": "ttsc --project tsconfig-es.json && tsc --project tsconfig-node.json",
    "postpublish": "node --eval \"require('fs').unlink('README.md', error => {if(error) throw error})\"",
    "prepublishOnly": "node --eval \"require('fs').copyFile('../README.md', 'README.md', error => {if(error) throw error})\""
  },
  "version": "5.0.1"
}
